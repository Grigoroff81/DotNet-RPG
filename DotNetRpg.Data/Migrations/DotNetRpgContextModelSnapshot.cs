// <auto-generated />
using System;
using DotNet_RPG.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotNetRpg.Data.Migrations
{
    [DbContext(typeof(DotNetRpgContext))]
    partial class DotNetRpgContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DotNetRpg.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Defeats")
                        .HasColumnType("int");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<int>("Fights")
                        .HasColumnType("int");

                    b.Property<int>("Hitpoints")
                        .HasColumnType("int");

                    b.Property<int>("Inelligence")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("RpgClassId")
                        .HasColumnType("int");

                    b.Property<int>("Strenght")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Victories")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RpgClassId");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Defeats = 0,
                            Defence = 10,
                            Fights = 0,
                            Hitpoints = 100,
                            Inelligence = 10,
                            Name = "Frodo",
                            RpgClassId = 1,
                            Strenght = 15,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Defeats = 0,
                            Defence = 10,
                            Fights = 0,
                            Hitpoints = 100,
                            Inelligence = 20,
                            Name = "Gandalf",
                            RpgClassId = 2,
                            Strenght = 10,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("DotNetRpg.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("ChararacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 3
                        });
                });

            modelBuilder.Entity("DotNetRpg.Models.RpgClass", b =>
                {
                    b.Property<int>("RpgClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RpgClassName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RpgClassId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            RpgClassId = 1,
                            RpgClassName = "Hobbit"
                        },
                        new
                        {
                            RpgClassId = 2,
                            RpgClassName = "Wizzard"
                        });
                });

            modelBuilder.Entity("DotNetRpg.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzrad"
                        });
                });

            modelBuilder.Entity("DotNetRpg.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Player");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 119, 198, 136, 253, 245, 137, 214, 75, 190, 190, 133, 133, 222, 192, 254, 146, 140, 155, 38, 26, 85, 182, 7, 151, 157, 193, 201, 77, 129, 107, 26, 218, 167, 131, 215, 96, 234, 106, 32, 86, 153, 135, 155, 11, 92, 53, 143, 29, 148, 202, 131, 4, 5, 180, 50, 214, 239, 19, 58, 93, 48, 18, 146, 65 },
                            PasswordSalt = new byte[] { 23, 9, 43, 188, 63, 209, 149, 111, 67, 95, 114, 131, 207, 99, 138, 9, 91, 195, 25, 147, 39, 206, 64, 118, 160, 167, 169, 30, 58, 224, 144, 165, 120, 46, 34, 209, 87, 141, 205, 77, 237, 207, 90, 87, 225, 218, 12, 116, 118, 218, 34, 155, 45, 27, 254, 154, 157, 2, 178, 76, 225, 250, 30, 171, 192, 225, 243, 224, 1, 141, 89, 223, 90, 6, 115, 18, 200, 87, 25, 204, 85, 112, 59, 51, 53, 139, 141, 226, 149, 196, 159, 45, 224, 71, 66, 2, 238, 194, 163, 183, 158, 174, 14, 253, 163, 145, 102, 158, 97, 131, 144, 226, 240, 80, 102, 123, 7, 32, 11, 150, 65, 59, 197, 156, 148, 155, 225, 94 },
                            Username = "Ivo"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 119, 198, 136, 253, 245, 137, 214, 75, 190, 190, 133, 133, 222, 192, 254, 146, 140, 155, 38, 26, 85, 182, 7, 151, 157, 193, 201, 77, 129, 107, 26, 218, 167, 131, 215, 96, 234, 106, 32, 86, 153, 135, 155, 11, 92, 53, 143, 29, 148, 202, 131, 4, 5, 180, 50, 214, 239, 19, 58, 93, 48, 18, 146, 65 },
                            PasswordSalt = new byte[] { 23, 9, 43, 188, 63, 209, 149, 111, 67, 95, 114, 131, 207, 99, 138, 9, 91, 195, 25, 147, 39, 206, 64, 118, 160, 167, 169, 30, 58, 224, 144, 165, 120, 46, 34, 209, 87, 141, 205, 77, 237, 207, 90, 87, 225, 218, 12, 116, 118, 218, 34, 155, 45, 27, 254, 154, 157, 2, 178, 76, 225, 250, 30, 171, 192, 225, 243, 224, 1, 141, 89, 223, 90, 6, 115, 18, 200, 87, 25, 204, 85, 112, 59, 51, 53, 139, 141, 226, 149, 196, 159, 45, 224, 71, 66, 2, 238, 194, 163, 183, 158, 174, 14, 253, 163, 145, 102, 158, 97, 131, 144, 226, 240, 80, 102, 123, 7, 32, 11, 150, 65, 59, 197, 156, 148, 155, 225, 94 },
                            Username = "Desy"
                        });
                });

            modelBuilder.Entity("DotNetRpg.Models.Weapon", b =>
                {
                    b.Property<int>("WeaponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("WeaponName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WeaponId");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            WeaponId = 1,
                            CharacterId = 1,
                            Damage = 20,
                            WeaponName = "Sword"
                        },
                        new
                        {
                            WeaponId = 2,
                            CharacterId = 2,
                            Damage = 30,
                            WeaponName = "Wand"
                        });
                });

            modelBuilder.Entity("DotNetRpg.Models.Character", b =>
                {
                    b.HasOne("DotNetRpg.Models.RpgClass", "Class")
                        .WithMany("Characters")
                        .HasForeignKey("RpgClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetRpg.Models.User", "User")
                        .WithMany("UserChararacters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotNetRpg.Models.CharacterSkill", b =>
                {
                    b.HasOne("DotNetRpg.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetRpg.Models.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("DotNetRpg.Models.Weapon", b =>
                {
                    b.HasOne("DotNetRpg.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("DotNetRpg.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("DotNetRpg.Models.Character", b =>
                {
                    b.Navigation("CharacterSkills");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("DotNetRpg.Models.RpgClass", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("DotNetRpg.Models.Skill", b =>
                {
                    b.Navigation("CharacterSkills");
                });

            modelBuilder.Entity("DotNetRpg.Models.User", b =>
                {
                    b.Navigation("UserChararacters");
                });
#pragma warning restore 612, 618
        }
    }
}
